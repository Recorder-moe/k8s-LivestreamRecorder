{{- if .Values.kubernetes.nfs.enable -}}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "recorder.fullname" . }}-nfs
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "recorder.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
    {{- include "recorder.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      name: {{ include "recorder.fullname" . }}-nfs
      labels:
        app: nfs-server
      {{- include "recorder.selectorLabels" . | nindent 8 }}
    spec:
      nodeSelector:
        'kubernetes.io/os': linux
      containers:
        - name: nfs-server
          image: itsthenetwork/nfs-server-alpine:latest
          env:
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: {{ quote .Values.kubernetes.clusterDomain }}
            - name: SHARED_DIRECTORY
              value: '/exports'
          volumeMounts:
            - mountPath: /exports
              name: nfs-vol
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN", "SETPCAP"]
          ports:
            - name: tcp-2049
              containerPort: 2049
              protocol: TCP
            - name: udp-111
              containerPort: 111
              protocol: UDP
      volumes:
        - name: nfs-vol
          {{- if .Values.kubernetes.nfs.customPVC }}
          persistentVolumeClaim:
            claimName: {{ .Values.kubernetes.nfs.customPVC }}
          {{- else if eq .Values.kubernetes.nfs.bindHostDirectory true }}
          hostPath:
            type: "DirectoryOrCreate"
            path: {{ .Values.kubernetes.nfs.hostPath }}
          {{- else }}
          emptyDir:
            sizeLimit: 10Gi
          {{- end }}
{{- end -}}
