---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "recorder.fullname" . }}-config
  labels:
  {{- include "recorder.labels" . | nindent 4 }}
data:
  config.jsonc: |-
    {
      "GA_TRACKING_ID": "{{ .Values.settings.gATrackingID }}",
{{- if eq .Values.storageService "AzureBlobStorage" }}
      "blobstorage": "{{ .Values.azureBlob.private.endpoint }}",
      "blobstorage_public": "{{ .Values.azureBlob.public.endpoint }}",
{{- else }}
      "blobstorage": "{{ include "s3scheme" . }}://{{ .Values.s3.endpoint }}/{{ .Values.s3.bucketName_Private }}",
      "blobstorage_public": "{{ include "s3scheme" . }}://{{ .Values.s3.endpoint }}/{{ .Values.s3.bucketName_Public }}",
{{- end }}
      "database": "{{ .Values.databaseService }}",
{{- if eq .Values.databaseService "ApacheCouchDB" }}
      "endpoint": "{{ .Values.apacheCouchDB.endpoint_readonly }}",
{{- else }}
      "endpoint": "{{ .Values.azureCosmosDB.public.endpoint }}",
{{- end }}
      "key": "{{ .Values.azureCosmosDB.public.readonlyKey }}",
      "clientId_google": "{{ .Values.oAuth2.google.clientID }}",
      "clientId_github": "{{ .Values.oAuth2.gitHub.clientID }}",
      "clientId_microsoft": "{{ .Values.oAuth2.microsoft.clientID }}",
      "clientId_discord": "{{ .Values.oAuth2.discord.clientID }}",
      "apiUrl": "https://{{ .Values.host }}",
      "statusUrl": "{{ .Values.statusUrl }}",
      "adminEmail": "{{ .Values.settings.adminEmail }}"
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "recorder.fullname" . }}-frontend
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "recorder.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.kubernetes.frontend.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: recorderfrontend
    {{- include "recorder.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: recorderfrontend
      {{- include "recorder.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 101
        runAsGroup: 0
        fsGroup: 0
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetes.clusterDomain }}
        image: {{ .Values.kubernetes.frontend.image }}
        name: recorderfrontend
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources: {{- toYaml .Values.kubernetes.frontend.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /usr/share/nginx/html/config.jsonc
          name: config-volume
          subPath: config.jsonc
        securityContext:
          allowPrivilegeEscalation: false
      volumes:
      - configMap:
          name: {{ include "recorder.fullname" . }}-config
        name: config-volume